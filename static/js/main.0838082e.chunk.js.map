{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","allTodos","onOpenModal","className","map","todos","id","classNames","completed","title","type","onClick","TodoFilter","onStatusChange","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","showModal","href","App","useState","setAllTodos","status","setStatus","setShowModal","prevState","filteredTodoByStatus","stat","filter","todo","filteringStatus","getTodosFromServer","resultTodos","useEffect","newStatus","ReactDOM","render","document","getElementById"],"mappings":"+NAYaA,EAA4B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpD,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGF,EAASG,KAAI,SAAAC,GAAK,OACjB,mCACE,qBAAI,UAAQ,OAAOF,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAMC,KACpC,oBAAIH,UAAU,iBACd,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWI,IACZ,CAAE,mBAAuC,IAApBF,EAAMG,WAC3B,CAAE,oBAAwC,IAApBH,EAAMG,YAF9B,SAKGH,EAAMI,UAGX,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,KAJjB,SAME,sBAAMC,UAAU,OAAhB,SACE,mBAAGA,UAAU,mCC/CpBS,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACzC,uBAAMV,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRW,SAAU,SAACC,GAAD,OAAWF,EAAeE,EAAMC,OAAOC,QAFnD,UAIE,wBAAQA,MAAM,MAAd,iBAIA,wBAAQA,MAAM,SAAd,oBAIA,wBAAQA,MAAM,YAAd,8BAON,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVe,YAAY,cAEd,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBgB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRV,KAAK,SACLP,UAAU,oBC/BpB,SAASkB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAAgC,IAA9B9B,EAA6B,EAA7BA,YAAa+B,EAAgB,EAAhBA,UACxD,OACE,sBAAK9B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAKd8B,GACC,sBAAK9B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,qBAQA,wBACEO,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMT,UAInB,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gDAIA,oBAAGA,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAU,kBAAlB,qBAEC,OAED,mBAAG+B,KAAK,2BAAR,wCChCDC,EAAgB,WAC3B,MAAgCC,mBAAiB,IAAjD,mBAAOnC,EAAP,KAAiBoC,EAAjB,KAEA,EAA4BD,mBAAiB,OAA7C,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAkB,GAApD,mBAAOH,EAAP,KAAkBO,EAAlB,KAOMtC,EAAc,WAClBsC,GAAa,SAAAC,GAAS,OAAKA,MAmBvBC,EAhBkB,SAACC,GACvB,OAAQA,GACN,IAAK,YACH,OAAO1C,EAAS2C,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKrC,aAGtC,IAAK,SACH,OAAOP,EAAS2C,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKrC,aAGtC,QACE,OAAOP,GAKgB6C,CAAgBR,GAE7C,SAASS,IF1BmB1B,EAAY,UE4BnCO,MAAK,SAAAoB,GAAW,OAAIX,EAAYW,MAOrC,OAJAC,qBAAU,WACRF,MACC,IAGD,qCACE,qBAAK5C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,eA5CS,SAACqC,GACtBX,EAAUW,QA+CF,qBAAK/C,UAAU,QAAf,SAEE,cAAC,EAAD,CAAUF,SAAUyC,EAAsBxC,YAAaA,aAM9D+B,GACC,cAAC,EAAD,CAAWA,UAAWA,EAAW/B,YAAaA,QC3EtDiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0838082e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n// import { getTodos, getUser } from '../../api';\n// import { Todo } from '../../types/Todo';\n// import { User } from '../../types/User';\n\ntype Props = {\n  allTodos: Todo[]\n  onOpenModal: () => void\n};\n\nexport const TodoList: React.FC<Props> = ({ allTodos, onOpenModal }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {allTodos.map(todos => (\n          <>\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todos.id}</td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  { 'has-text-danger': todos.completed === false },\n                  { 'has-text-success': todos.completed === true },\n                )}\n                >\n                  {todos.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onOpenModal()}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          </>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onStatusChange: (status: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onStatusChange }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onStatusChange(event.target.value)}\n        >\n          <option value=\"all\">\n            All\n          </option>\n\n          <option value=\"active\">\n            Active\n          </option>\n\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n        />\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\n// import { Loader } from '../Loader';\n\ntype Props = {\n  onOpenModal: () => void\n  showModal: boolean\n};\n\nexport const TodoModal: React.FC<Props> = ({ onOpenModal, showModal }) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {/* {true ? (\n        <Loader />\n      ) :  */}\n      {showModal && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #2\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onOpenModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              quis ut nam facilis et officia qui\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                Leanne Graham\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n// import { User } from './types/User';\nimport { TodoModal } from './components/TodoModal';\n// import { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  // const [allUsers, setAllUsers] = useState<User | {}>({});\n  const [status, setStatus] = useState<string>('all');\n  const [showModal, setShowModal] = useState<boolean>(false);\n  // const [selectedTodo, setSelectedTodo] = useState<Todo | {}>({});\n\n  const onStatusChange = (newStatus: string) => {\n    setStatus(newStatus);\n  };\n\n  const onOpenModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const filteringStatus = (stat: string) => {\n    switch (stat) {\n      case 'completed': {\n        return allTodos.filter(todo => todo.completed === true);\n      }\n\n      case 'active': {\n        return allTodos.filter(todo => todo.completed === false);\n      }\n\n      default: {\n        return allTodos;\n      }\n    }\n  };\n\n  const filteredTodoByStatus = filteringStatus(status);\n\n  function getTodosFromServer() {\n    getTodos()\n      .then(resultTodos => setAllTodos(resultTodos));\n  }\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onStatusChange={onStatusChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {/* <Loader /> */}\n              <TodoList allTodos={filteredTodoByStatus} onOpenModal={onOpenModal} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal showModal={showModal} onOpenModal={onOpenModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}