{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/TodoOption.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","allTodos","selectedTodo","setSelectedTodo","className","map","todo","isSelectedTodo","id","classNames","completed","title","type","onClick","TodoFilter","query","setQuery","todoOption","setTodoOption","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoOption","getUser","userId","Loader","TodoModal","useState","isLoaded","setIsloaded","user","setUser","loadUser","a","loadedUser","useEffect","href","email","name","App","setAllTodos","All","result","filter","normQuery","toLocaleLowerCase","includes","ACTIVE","COMPLETED","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAASI,KAAI,SAAAC,GACZ,IAAMC,EAAiBD,EAAKE,MAAL,OAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAcM,IAEjD,OACE,qBACE,UAAQ,OAERJ,UAAWK,IAAW,CACpB,4BAA6BF,IAJjC,UAOE,oBAAIH,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKI,WACJ,sBAAMN,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAYE,EAAKI,UAEhB,kCADA,kBADJ,SAIGJ,EAAKK,UAGV,oBAAIP,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVQ,KAAK,SACLC,QAAS,kBAAMV,EAAgBG,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,EACV,mBACA,uBA/BLD,EAAKE,aC5BXM,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEA,OACE,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAcG,EAAMC,OAAOH,QAHlD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRQ,KAAK,OACLR,UAAU,QACVmB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAASK,EAAMC,OAAOH,UAE7C,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,EAAMS,OAAS,GACd,sBAAMpB,UAAU,gBAAgBqB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRd,KAAK,SACLR,UAAU,SACVS,QAAS,kBAAMG,EAAS,gBCvC/B,SAASW,EAAOC,GAErB,IARmBC,EAQbC,EAVS,iEAUYF,EAAM,QAEjC,OAVmBC,EAUP,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICrBKC,EDwBCC,EAAU,SAACC,GAAD,OAAoBb,EAAG,iBAAiBa,M,SCxBnDF,K,UAAAA,E,gBAAAA,E,uBAAAA,M,gCCGCG,G,MAAmB,kBAC9B,qBAAKrC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMNsC,EAA6B,SAAC,GAGpC,IAFLxC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,EAAgCwC,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAAsB,MAA9C,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAQ,uCAAG,WAAOR,GAAP,eAAAS,EAAA,sEACUV,EAAQC,GADlB,OACTU,EADS,OAIbH,EADEG,GAGM,MAGVL,GAAY,GATG,2CAAH,sDAkBd,OANAM,qBAAU,WACRN,GAAY,GAEZG,EAAS9C,EAAasC,UACrB,IAGD,sBAAKpC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdwC,EACC,cAAC,EAAD,IAEA,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaM,MAIzB,wBACEI,KAAK,SACLR,UAAU,SACV,UAAQ,cACRS,QAAS,kBAAMV,EAAgB,YAInC,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaS,QAGhB,oBAAGP,UAAU,QAAQ,UAAQ,aAA7B,UACGF,EAAaQ,UACV,wBAAQN,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGgD,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,oBC7DVC,EAAgB,WAC3B,MAAgCZ,mBAAiB,IAAjD,mBAAO1C,EAAP,KAAiBuD,EAAjB,KACA,EAA0Bb,mBAAiB,IAA3C,mBAAO5B,EAAP,KAAcC,EAAd,KACA,EAAoC2B,mBAAiBL,EAAWmB,KAAhE,mBAAOxC,EAAP,KAAmBC,EAAnB,KACA,EAAwCyB,mBAAsB,MAA9D,mBAAOzC,EAAP,KAAqBC,EAArB,KJI4BwB,EAAY,UIDrCO,MAAK,SAAAwB,GAAM,OAAIF,EAAYE,MAsB9B,OACE,qCACE,qBAAKtD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPC,SAAUA,EACVC,WAAYA,EACZC,cAAeA,MAInB,qBAAKd,UAAU,QAAf,SACuB,IAApBH,EAASuB,OACN,cAAC,EAAD,IAEA,cAAC,EAAD,CACEvB,SAxCTA,EAAS0D,QAAO,SAAArD,GACrB,IAAMsD,EAAY7C,EAAM8C,oBAExB,OAAQ5C,GACN,KAAKqB,EAAWmB,IACd,OAAOnD,EAAKK,MAAMkD,oBAAoBC,SAASF,GAEjD,KAAKtB,EAAWyB,OACd,OAAOzD,EAAKK,MAAMkD,oBAAoBC,SAASF,KAAetD,EAAKI,UAErE,KAAK4B,EAAW0B,UACd,OAAO1D,EAAKK,MAAMkD,oBAAoBC,SAASF,IAActD,EAAKI,UAEpE,QACE,OAAOJ,MA2BGJ,aAAcA,EACdC,gBAAiBA,aAQ9BD,GACC,cAAC,EAAD,CACEA,aAAcA,EACdC,gBAAiBA,QCzE3B8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.137170a7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  allTodos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  allTodos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {allTodos.map(todo => {\n          const isSelectedTodo = todo.id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={todo.id}\n              className={classNames({\n                'has-background-info-light': isSelectedTodo,\n              })}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={!todo.completed\n                  ? 'has-text-danger'\n                  : 'has-text-success icon-completed'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={isSelectedTodo\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (str: string) => void,\n  todoOption: string,\n  setTodoOption: (str: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  todoOption,\n  setTodoOption,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todoOption}\n            onChange={(event) => setTodoOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUsers = () => get<User[]>('/users');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum TodoOption {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [isLoaded, setIsloaded] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async (userId: number) => {\n    const loadedUser = await getUser(userId);\n\n    if (loadedUser) {\n      setUser(loadedUser);\n    } else {\n      setUser(null);\n    }\n\n    setIsloaded(false);\n  };\n\n  useEffect(() => {\n    setIsloaded(true);\n\n    loadUser(selectedTodo.userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoOption } from './types/TodoOption';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [todoOption, setTodoOption] = useState<string>(TodoOption.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  getTodos()\n    .then(result => setAllTodos(result));\n\n  const visibleTodos = () => {\n    return allTodos.filter(todo => {\n      const normQuery = query.toLocaleLowerCase();\n\n      switch (todoOption) {\n        case TodoOption.All:\n          return todo.title.toLocaleLowerCase().includes(normQuery);\n\n        case TodoOption.ACTIVE:\n          return todo.title.toLocaleLowerCase().includes(normQuery) && !todo.completed;\n\n        case TodoOption.COMPLETED:\n          return todo.title.toLocaleLowerCase().includes(normQuery) && todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                todoOption={todoOption}\n                setTodoOption={setTodoOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {allTodos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    allTodos={visibleTodos()}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}